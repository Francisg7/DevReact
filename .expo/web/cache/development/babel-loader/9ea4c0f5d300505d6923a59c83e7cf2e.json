{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\FRANCIS WILLIAMS\\\\Desktop\\\\Cours CS2I4\\\\semestre 2\\\\Developpement Mobile\\\\Project React\\\\react-native-camera-expo-exmple\\\\App.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Camera } from 'expo-camera';\nimport * as Permissions from 'expo-permissions';\nimport { FontAwesome, Ionicons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      hasPermission: null,\n      cameraType: Camera.Constants.Type.back\n    };\n\n    _this.getPermissionAsync = function _callee() {\n      var _await$Permissions$as, _status, _await$Permissions$as2, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.Android === 'Android')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 3:\n              _await$Permissions$as = _context.sent;\n              _status = _await$Permissions$as.status;\n\n              if (_status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 8:\n              _await$Permissions$as2 = _context.sent;\n              status = _await$Permissions$as2.status;\n\n              _this.setState({\n                hasPermission: status === 'granted'\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.handleCameraType = function () {\n      var cameraType = _this.state.cameraType;\n\n      _this.setState({\n        cameraType: cameraType === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back\n      });\n    };\n\n    _this.takePicture = function _callee2() {\n      var photo;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!_this.camera) {\n                _context2.next = 4;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(_this.camera.takePictureAsync());\n\n            case 3:\n              photo = _context2.sent;\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.pickImage = function _callee3() {\n      var result;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.Images\n              }));\n\n            case 2:\n              result = _context3.sent;\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.getPermissionAsync();\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasPermission = this.state.hasPermission;\n\n      if (hasPermission === null) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          }\n        });\n      } else if (hasPermission === false) {\n        return React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          }\n        }, \"No access to camera\");\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          }\n        }, React.createElement(Camera, {\n          style: {\n            flex: 1\n          },\n          type: this.state.cameraType,\n          ref: function ref(_ref) {\n            _this2.camera = _ref;\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            margin: 30\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            alignSelf: 'flex-end',\n            alignItems: 'center',\n            backgroundColor: 'transparent'\n          },\n          onPress: function onPress() {\n            return _this2.pickImage();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"photos\",\n          style: {\n            color: \"#fff\",\n            fontSize: 40\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          }\n        })), React.createElement(TouchableOpacity, {\n          style: {\n            alignSelf: 'flex-end',\n            alignItems: 'center',\n            backgroundColor: 'transparent'\n          },\n          onPress: function onPress() {\n            return _this2.takePicture();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"camera\",\n          style: {\n            color: \"#fff\",\n            fontSize: 40\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          }\n        })), React.createElement(TouchableOpacity, {\n          style: {\n            alignSelf: 'flex-end',\n            alignItems: 'center',\n            backgroundColor: 'transparent'\n          },\n          onPress: function onPress() {\n            return _this2.handleCameraType();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          }\n        }, React.createElement(MaterialCommunityIcons, {\n          name: \"camera-switch\",\n          style: {\n            color: \"#fff\",\n            fontSize: 40\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          }\n        })))));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/FRANCIS WILLIAMS/Desktop/Cours CS2I4/semestre 2/Developpement Mobile/Project React/react-native-camera-expo-exmple/App.js"],"names":["React","Camera","Permissions","FontAwesome","Ionicons","MaterialCommunityIcons","ImagePicker","App","state","hasPermission","cameraType","Constants","Type","back","getPermissionAsync","Platform","Android","askAsync","CAMERA_ROLL","status","alert","CAMERA","setState","handleCameraType","front","takePicture","camera","takePictureAsync","photo","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","result","flex","ref","flexDirection","justifyContent","margin","alignSelf","alignItems","backgroundColor","color","fontSize","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View ,TouchableOpacity,Platform, } from 'react-native';\r\nimport { Camera } from 'expo-camera';\r\nimport * as Permissions from 'expo-permissions';\r\nimport { FontAwesome, Ionicons,MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\n\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    hasPermission: null,\r\n    cameraType: Camera.Constants.Type.back,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getPermissionAsync()\r\n  }\r\n\r\n  getPermissionAsync = async () => {\r\n    // Camera roll Permission \r\n    if (Platform.Android === 'Android') {\r\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\r\n      if (status !== 'granted') {\r\n        alert('Sorry, we need camera roll permissions to make this work!');\r\n      }\r\n    }\r\n    // Camera Permission\r\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n    this.setState({ hasPermission: status === 'granted' });\r\n  }\r\n\r\n  handleCameraType=()=>{\r\n    const { cameraType } = this.state\r\n\r\n    this.setState({cameraType:\r\n      cameraType === Camera.Constants.Type.back\r\n      ? Camera.Constants.Type.front\r\n      : Camera.Constants.Type.back\r\n    })\r\n  }\r\n\r\n  takePicture = async () => {\r\n    if (this.camera) {\r\n      let photo = await this.camera.takePictureAsync();\r\n\r\n    }\r\n  }\r\n\r\n  pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images\r\n    });\r\n  }\r\n  \r\n\r\n  render(){\r\n    const { hasPermission } = this.state\r\n    if (hasPermission === null) {\r\n      return <View />;\r\n    } else if (hasPermission === false) {\r\n      return <Text>No access to camera</Text>;\r\n    } else {\r\n      return (\r\n          <View style={{ flex: 1 }}>\r\n            <Camera style={{ flex: 1 }} type={this.state.cameraType}  ref={ref => {this.camera = ref}}>\r\n              <View style={{flex:1, flexDirection:\"row\",justifyContent:\"space-between\",margin:30}}>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    alignSelf: 'flex-end',\r\n                    alignItems: 'center',\r\n                    backgroundColor: 'transparent'                 \r\n                  }}\r\n                  onPress={()=>this.pickImage()}>\r\n                  <FontAwesome\r\n                      name=\"photos\"\r\n                      style={{ color: \"#fff\", fontSize: 40}}\r\n                  />\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    alignSelf: 'flex-end',\r\n                    alignItems: 'center',\r\n                    backgroundColor: 'transparent',\r\n                  }}\r\n                  onPress={()=>this.takePicture()}\r\n                  >\r\n                  <FontAwesome\r\n                      name=\"camera\"\r\n                      style={{ color: \"#fff\", fontSize: 40}}\r\n                  />\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    alignSelf: 'flex-end',\r\n                    alignItems: 'center',\r\n                    backgroundColor: 'transparent',\r\n                  }}\r\n                  onPress={()=>this.handleCameraType()}\r\n                  >\r\n                  <MaterialCommunityIcons\r\n                      name=\"camera-switch\"\r\n                      style={{ color: \"#fff\", fontSize: 40}}\r\n                  />\r\n                </TouchableOpacity>\r\n              </View>\r\n            </Camera>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}